# ========================
# Clash-ALL 优化配置
# ========================

# ========================
# 主要端口设置
# ========================
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7895

allow-lan: true
mode: rule
log-level: info

external-controller: 0.0.0.0:9090
external-ui: ui
external-ui-name: zashboard
external-ui-url: https://github.moeyy.xyz/https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip
secret: "123456"

# ========================
# DNS 设置
# ========================
dns:
  enable: true
  listen: 0.0.0.0:7874
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 198.19.0.1/16
  fake-ip-filter-mode: blacklist
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
ipv6: false

# ========================
# TUN 设置
# ========================
tun:
  enable: true
  # system/gvisor/mixed
  stack: gvisor
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# ========================
# 策略组定义
# ========================
default: &default
  type: select
  proxies:
    # 全局直连/自动
    - DIRECT
    - 所有-自动
    - 所有-手动
    - 落地选择
    # 各地区-自动（常用优先）
    - 香港-自动
    - 新加坡-自动
    - 日本-自动
    - 韩国-自动
    - 美国-自动
    # 兜底
    - REJECT

# 按地区筛选（正则）
FilterHK: &FilterHK '^(?=.*(香港|HK|Hong|🇭🇰))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点|落地|家宽|自建|×)).*$'
FilterJP: &FilterJP '^(?=.*(日本|JP|Japan|🇯🇵))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点|落地|家宽|自建|×)).*$'
FilterKR: &FilterKR '^(?=.*(韩国|韓|KR|Korea|🇰🇷))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点|落地|家宽|自建|×)).*$'
FilterSG: &FilterSG '^(?=.*(新加坡|狮城|SG|Singapore|🇸🇬))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点|落地|家宽|自建|×)).*$'
FilterUS: &FilterUS '^(?=.*(美国|US|United States|America|🇺🇸))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点|落地|家宽|自建|×)).*$'
FilterUK: &FilterUK '^(?=.*(英国|UK|United Kingdom|🇬🇧))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点|落地|家宽|自建|×)).*$'
FilterFR: &FilterFR '^(?=.*(法国|FR|France|🇫🇷))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点|落地|家宽|自建|×)).*$'
FilterDE: &FilterDE '^(?=.*(德国|DE|Germany|🇩🇪))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点|落地|家宽|自建|×)).*$'
FilterTW: &FilterTW '^(?=.*(台湾|TW|Taiwan|Wan|🇨🇳|🇨🇳))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点|落地|家宽|自建|×)).*$'
FilterOthers: &FilterOthers '^(?!.*(🇭🇰|HK|Hong|香港|🇨🇳|TW|Taiwan|Wan|🇯🇵|JP|Japan|日本|🇸🇬|SG|Singapore|狮城|🇺🇸|US|United States|America|美国|🇩🇪|DE|Germany|德国|🇬🇧|UK|United Kingdom|英国|🇰🇷|KR|Korea|韩国|韓|🇫🇷|FR|France|法国)).*$'
FilterSave: &FilterSave '^(?=.*((\\s|-)0\\.[0-9](×|x|X)|低倍率|省流|大流量)).*$'
FilterAdvance: &FilterAdvance '^(?=.*((?i)(\\s|-)(([1-9](\\.\\d+)?)(×|x|X))|专线|专用|高级|直连|急速|高倍率|IEPL|IPLC|AIA|CTM|CC|iepl|iplc|aia|ctm|cc)).*$'
FilterLanding: &FilterLanding '^(?=.*((?i)落地|家宽|自建)).*$'
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)\\b|(\\d{4}-\\d{2}-\\d{2}|\\d+G)))).*$'
FilterTunnel: &FilterTunnel '^(?=.*(香港|HK|Hong|🇭🇰|日本|JP|Japan|🇯🇵|新加坡|狮城|SG|Singapore|🇸🇬|韩国|KR|Korea|🇰🇷|美国|US|United States|America|🇺🇸))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点|落地|家宽|自建|×)).*$'

Select: &Select {type: select, proxies: [DIRECT],url: 'https://cp.cloudflare.com/generate_204', disable-udp: false, hidden: false, include-all: true}
Auto: &Auto {type: url-test, url: 'https://cp.cloudflare.com/generate_204', interval: 300, tolerance: 50, disable-udp: false, hidden: true, include-all: true}

proxy-groups:
  # 业务分流组（统一引用 <<: *default）
  - {name: 🚀 默认代理, <<: *default}
  - {name: 🤖 AI,         <<: *default}
  - {name: 📘 GitHub,     <<: *default}
  - {name: 🙋 Telegram,   <<: *default}
  - {name: 📺 YouTube,    <<: *default}
  - {name: 👯‍♂️ TikTok,      <<: *default}
  - {name: 📀 流媒体,     <<: *default}
  - {name: 🐬 OneDrive,   <<: *default}
  - {name: 🍎 Apple,      <<: *default}
  - {name: 🪟 Microsoft,  <<: *default}
  - {name: 🍀 Google,     <<: *default}
  - {name: 🛠 Test,       <<: *default}
  - {name: 🌍 国外,       <<: *default}
  - {name: ➡️ 国内,       <<: *default}
  - {name: 🐟 漏网之鱼,   <<: *default}

  # 特殊分组
  - {name: 中继选择, <<: *Select, filter: *FilterAll, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png}
  - {name: 落地选择, <<: *Select, filter: *FilterLanding, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png}
  - {name: 所有-手动, <<: *Select, filter: *FilterAll, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Static.png}
  - {name: 所有-自动, <<: *Auto,   icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Urltest.png}

  # 自动选择 - 按地区
  - {name: 香港-自动, <<: *Auto, filter: *FilterHK, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png}
  - {name: 日本-自动, <<: *Auto, filter: *FilterJP, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png}
  - {name: 韩国-自动, <<: *Auto, filter: *FilterKR, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png}
  - {name: 新加坡-自动, <<: *Auto, filter: *FilterSG, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png}
  - {name: 美国-自动, <<: *Auto, filter: *FilterUS, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png}
  - {name: 台湾-自动, <<: *Auto, filter: *FilterTW, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/CN.png}

# ========================
# 规则引擎（rules）
# ========================
rules:
  # 域名相关规则
  - RULE-SET,ChatGPT / Domain,🤖 AI
  - RULE-SET,Claude / Domain,🤖 AI
  - RULE-SET,Meta AI / Domain,🤖 AI
  - RULE-SET,Copilot / Domain,🤖 AI
  - RULE-SET,Gemini / Domain,🤖 AI
  - RULE-SET,GitHub / Domain,📘 GitHub
  - RULE-SET,Telegram / Domain,🙋 Telegram
  - RULE-SET,Twitter / Domain,🚀 默认代理
  - RULE-SET,Reddit / Domain,🚀 默认代理
  - RULE-SET,Facebook / Domain,🚀 默认代理
  - RULE-SET,OKX / Domain,🚀 默认代理
  - RULE-SET,Bybit / Domain,🚀 默认代理
  - RULE-SET,Binance / Domain,🚀 默认代理
  - RULE-SET,TikTok / Domain,👯‍♂️ TikTok
  - RULE-SET,Netflix / Domain,📀 流媒体
  - RULE-SET,Disney / Domain,📀 流媒体
  - RULE-SET,Youtube / Domain,📺 YouTube
  - RULE-SET,Apple-CN / Domain,🍎 Apple
  - RULE-SET,Apple / Domain,🍎 Apple
  - RULE-SET,onedrive_domain,🐬 OneDrive
  - RULE-SET,Microsoft / Domain,🪟 Microsoft
  - RULE-SET,Google / Domain,🍀 Google
  - RULE-SET,Proxy / Domain,🚀 默认代理
  - RULE-SET,Globe / Domain,🌍 国外
  - RULE-SET,Custom_Proxy,🌍 国外
  - RULE-SET,Direct / Domain,DIRECT
  - RULE-SET,China / Domain,➡️ 国内
  - RULE-SET,Private / Domain,DIRECT
  - RULE-SET,Custom_Direct,DIRECT
  - RULE-SET,TEST / Domain,🚀 默认代理

  # IP相关规则
  - RULE-SET,Telegram / IP,🙋 Telegram,no-resolve
  - RULE-SET,Netflix / IP,📀 流媒体,no-resolve
  - RULE-SET,Google / IP,🍀 Google,no-resolve
  - RULE-SET,China / IP,➡️ 国内,no-resolve

  # 兜底
  - MATCH,🐟 漏网之鱼

# ========================
# 规则集提供者
# ========================
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

# 域名相关 rule-providers
rule-providers:
  ChatGPT / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/openai.mrs"}
  Claude / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Claude/Claude.list"}
  Meta AI / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/MetaAi.list"}
  Copilot / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Copilot.list"}
  Gemini / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Gemini.list"}
  GitHub / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/github.mrs"}
  Telegram / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/telegram.mrs"}
  Twitter / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/x.mrs"}
  Facebook / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/facebook.mrs"}
  Apple-CN / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple-cn.mrs"}
  Apple / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple.mrs"}
  onedrive_domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  Microsoft / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/microsoft.mrs"}
  OKX / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/okx.mrs"}
  Bybit / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/bybit.mrs"}
  Binance / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/binance.mrs"}
  TikTok / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/tiktok.mrs"}
  Netflix / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/netflix.mrs"}
  Disney / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/disney.mrs"}
  Proxy / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Proxy.list"}
  Globe / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Global/Global.list"}
  Direct / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Direct.list"}
  China / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/cn.mrs"}
  Private / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/private.mrs"}
  Reddit / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/reddit.mrs"}
  Youtube / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/youtube.mrs"}
  Google / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/google.mrs"}

# IP相关 rule-providers
  Telegram / IP: {<<: *ip, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/telegram.mrs"}
  Netflix / IP: {<<: *ip, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/netflix.mrs"}
  China / IP: {<<: *ip, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/cn.mrs"}
  Google / IP: {<<: *ip, url: "https://github.moeyy.xyz/https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/google.mrs"}

# 其他 rule-providers
  Custom_Proxy: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/Heart0510/Clash_rule_file_repository/refs/heads/main/rules/Agency_Rules.list"}
  Custom_Direct: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/Heart0510/Clash_rule_file_repository/refs/heads/main/rules/Direct_rules.list"}
  TEST / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Check.list"}
   
